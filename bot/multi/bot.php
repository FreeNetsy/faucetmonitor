<?php eval("?>".base64_decode("<?php

date_default_timezone_set("Asia/Jakarta");
system("clear");
/* START COLOR */
$H="\033[0;30m";
$AB2="\033[1;30m";
$P="\033[0;37m";
$P2="\033[1;37m";
$M="\033[0;31m";
$M2="\033[1;31m";
$HJ="\033[0;32m";
$HJ2="\033[1;32m";
$K="\033[0;33m";
$K2="\033[1;33m";
$B="\033[0;34m";
$B2="\033[1;34m";
$U="\033[0;35m";
$U2="\033[1;35m";
$BL="\033[0;36m";
$BL2="\033[1;36m";
/* END COLOR */

function fetch_value($str,$find_start) {
        $start = @strpos($str,$find_start);
        if ($start === false) {
                return "";
        }
        $length = strlen($find_start);
        $end = strpos(substr($str,$start +$length));
        return trim(substr($str,$start +$length));
}


function url($url){
$headers = array();
$headers[] = "Mozilla/5.0 (Linux; Android 10; RMX1911) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.152 Mobile Safari/537.36";
$ch = curl_init();
      curl_setopt($ch, CURLOPT_URL, $url);
      curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
      curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
      curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
      $res = curl_exec($ch);
return $res;
}

error_reporting(0);
system("clear");

$SC = $P2."V1.1.1";
$SERVER =$P2."[-] Server : \033[1;31mOnline";
$VERSI =$P2."[-] Versi : 1.1.1";
$SCRIPT =$P2."[-] Script : \033[0;33mAll Faucet Drain";

$res = url("https://controlc.com/b6d5a8b2");
//echo $res."\n";
$link1 = explode('Link Password: ',$res);
$link = explode(' ',$link1[1]);
//echo $link[0]."\n";
$pw1 = explode('Pass: ',$res);
$pw = explode(' ',$pw1[1]);
//echo $pass[0]."\n";

$pass = $pw[0];
$read = file_get_contents("key.txt");
system('clear');
if ($pass=="off"){
$o = "\033[1;32m[\033[1;31mOFFLINE\033[1;32m]";
}else{
$o = "\033[1;32m[ONLINE]";
}
if ($pass=="update"){
$o = "\033[1;32m[\033[1;91mUpdate\033[1;92m]";
}
echo $baner1 = "
\033[0;31m_____  _    _ _____ _____ ___  ______     ___________ 
\033[0;31m|  _  || |  | /  ___|_   _/ _ \ | ___ \   |_   _|  _  \
\033[0;31m| | | || |  | \ `--.  | |/ /_\ \| |_/ /_____| | | | | |
\033[1;37m| | | || |/\| |`--. \ | ||  _  ||    /______| | | | | |
\033[1;37m\ \/' /\  /\  /\__/ / | || | | || |\ \     _| |_| |/ / 
 \033[1;37m\_/\_\ \/  \/\____/  \_/\_| |_/\_| \_|    \___/|___/  \033[1;91m$SC \n";
echo $info1 = "
\033[1;37m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
\033[1;31m▶▶▶ Info !!!
$VERSI
$SERVER
$SCRIPT
\033[1;37m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
\033[1;31m▶▶▶ Warning !!!
\033[1;37m[-] Script not for sale
\033[1;37m[-] Ini adalah program ilegal
\033[1;37m[-] Semua resiko ditanggung masing-masing pengguna
\033[1;37m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
 if ($pass == 'update'){
      echo $P2."▶▶▶ \033[1;37mScript Ini Sudah \033[1;31mOffline \n";
      echo $P2."▶▶▶ \033[1;37mSilahkan download versi terbaru \n";
      echo $P2."▶▶▶ \033[1;37mLink Script Versi Update \033[1;31m$link[0]\n\n";
      exit;
}

if ($link[0]==""){
echo " \033[1;91mCONNECTING LOST...!!!\n\n";
exit;
}
if ($pass == 'off'){
      echo $M2."▶▶▶ Script sudah di non-aktifkan \n";
      exit;
}else{
if($read == $pass){
      echo $P2."\n Loading \033[1;31m•\033[0;37m>\r";
      sleep(1);
      echo $P2." Loading \033[1;31m•\033[0;37m> \033[1;31m•\033[0;37m>\r";
      sleep(1);
      echo $P2." Loading \033[1;31m•\033[0;37m> \033[1;31m•\033[0;37m> \033[1;31m•\033[0;37m>\r";
      sleep(5);
       system("xdg-open https://youtube.com/c/QawwamahStar");
      sleep(1);
}
elseif($read != $pass){
      $save = fopen("key.txt", "w");
echo "\033[1;37m▶▶▶$P2 Link Password :$M2 $link[0]\n";
echo $P2."▶▶▶ \033[1;37mMasukkan Password Di Sini : ".$H;
$p = trim(fgets(STDIN));

echo $P2."\n Loading \033[1;31m•\033[0;37m>\r";
sleep(1);
echo $P2." Loading \033[1;31m•\033[0;37m> \033[1;31m•\033[0;37m>\r";
sleep(1);
echo $P2." Loading \033[1;31m•\033[0;37m> \033[1;31m•\033[0;37m> \033[1;31m•\033[0;37m>\r";
sleep(1);
if($pass == $p){
        fwrite($save, $p);
        echo $P2." ✓ OPEN SCRIPT SUCCESS            \r";
        fclose($save);
        sleep(5);
        system("xdg-open https://youtube.com/c/QawwamahStar");
        sleep(1);
        }else{
        echo $M2."▶▶▶ GAGAL...!!! SILAHKAN COBA LAGI\n";
        exit;
        }
        }
}
sleep(5);

system("clear");
echo $baner1 = "
\033[0;31m_____  _    _ _____ _____ ___  ______     ___________ 
\033[0;31m|  _  || |  | /  ___|_   _/ _ \ | ___ \   |_   _|  _  \
\033[0;31m| | | || |  | \ `--.  | |/ /_\ \| |_/ /_____| | | | | |
\033[1;37m| | | || |/\| |`--. \ | ||  _  ||    /______| | | | | |
\033[1;37m\ \/' /\  /\  /\__/ / | || | | || |\ \     _| |_| |/ / 
 \033[1;37m\_/\_\ \/  \/\____/  \_/\_| |_/\_| \_|    \___/|___/  \033[1;91m$SC \n";
echo $info1 = "
\033[1;37m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
\033[1;31m▶▶▶ Info !!!
$VERSI
$SERVER
$SCRIPT
\033[1;37m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
\033[1;31m▶▶▶ Warning !!!
\033[1;37m[-] Script not for sale
\033[1;37m[-] Ini adalah program ilegal
\033[1;37m[-] Semua resiko ditanggung masing-masing pengguna
\033[1;37m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
sleep(2);


function post($url,$ua,$data){
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, $url);
curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_HTTPHEADER, $ua);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
curl_setopt($ch, CURLOPT_COOKIEJAR, "cookie.txt");
curl_setopt($ch, CURLOPT_COOKIEFILE, "cookie.txt");
$r = curl_exec($ch);
return $r;
}


function gett($url,$ua){

$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, $url);
curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_HTTPHEADER, $ua);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
curl_setopt($ch, CURLOPT_COOKIEJAR, "cookie.txt");
curl_setopt($ch, CURLOPT_COOKIEFILE, "cookie.txt");
$r = curl_exec($ch);
return $r;
}

include("cfg.php");


// LOGINBTC

$url = "http://btcdrain.playpoolstudios.com/login.php";
$ua = array();
$ua[] = "Host:btcdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email;
$user = post($url,$ua,$data);

$log = explode('<td>', $user);
$in = explode('</td>', $log[1]);
echo $M2."Your Email : ".$M2.$in[0]."\n";

// DASHBOARD1

$url = "http://btcdrain.playpoolstudios.com/updatetime.php";
$ua = array();
$ua[] = "Host:btcdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email;
$usel = post($url,$ua,$data);

$usel = json_decode($usel);
$bal = $usel->balance;
echo $P2."Your BTC Balance : ".$P2.$bal."\n";

// LOGINETH

$url = "http://ethdrain.playpoolstudios.com/login.php";
$ua = array();
$ua[] = "Host:ethdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email;
$user = post($url,$ua,$data);

$log = explode('<td>', $user);
$in = explode('</td>', $log[1]);

// DASHBOARD1

$url = "http://ethdrain.playpoolstudios.com/updatetime.php";
$ua = array();
$ua[] = "Host:ethdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email;
$usel = post($url,$ua,$data);

$usel = json_decode($usel);
$bal = $usel->balance;
echo $P2."Your ETH Balance : ".$P2.$bal."\n";

// LOGINLTC

$url = "http://ltcdrain.playpoolstudios.com/login.php";
$ua = array();
$ua[] = "Host:ltcdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email;
$user = post($url,$ua,$data);

$log = explode('<td>', $user);
$in = explode('</td>', $log[1]);

// DASHBOARD1

$url = "http://ltcdrain.playpoolstudios.com/updatetime.php";
$ua = array();
$ua[] = "Host:ltcdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email;
$usel = post($url,$ua,$data);

$usel = json_decode($usel);
$bal = $usel->balance;
echo $P2."Your LTC Balance : ".$P2.$bal."\n";

// LOGINBCH

$url = "http://bchdrain.playpoolstudios.com/login.php";
$ua = array();
$ua[] = "Host:bchdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email;
$user = post($url,$ua,$data);

$log = explode('<td>', $user);
$in = explode('</td>', $log[1]);

// DASHBOARD1

$url = "http://bchdrain.playpoolstudios.com/updatetime.php";
$ua = array();
$ua[] = "Host:bchdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email;
$usel = post($url,$ua,$data);

$usel = json_decode($usel);
$bal = $usel->balance;
echo $P2."Your BCH Balance : ".$P2.$bal."\n";

// LOGINXRP

$url = "http://xrpdrain.playpoolstudios.com/login.php";
$ua = array();
$ua[] = "Host:xrpdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email;
$user = post($url,$ua,$data);

$log = explode('<td>', $user);
$in = explode('</td>', $log[1]);

// DASHBOARD1

$url = "http://xrpdrain.playpoolstudios.com/updatetime.php";
$ua = array();
$ua[] = "Host:xrpdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email;
$usel = post($url,$ua,$data);

$usel = json_decode($usel);
$bal = $usel->balance;
echo $P2."Your XRP Balance : ".$P2.$bal."\n";
sleep(2);
echo $P2."\n Loading \033[1;31m•\033[0;37m>\r";
sleep(1);
echo $P2." Loading \033[1;31m•\033[0;37m> \033[1;31m•\033[0;37m>\r";
sleep(1);
echo $P2." Loading \033[1;31m•\033[0;37m> \033[1;31m•\033[0;37m> \033[1;31m•\033[0;37m>\r";
sleep(1);
echo "\033[1;37m▶ \033[1;31mStart Claiming A Mission \n";

while(true){

echo $P2."~~~~~~~~~~~~~~~~~~~~~~~~~~\033[0;33m[BTC]\033[1;37m~~~~~~~~~~~~~~~~~~~~~~~~\n";

// CLAIM0

$url = "http://btcdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:btcdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=0";
$lesu0 = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM1

$url = "http://btcdrain.playpoolstudios.com/validatetimer.php";
$ua = array();
$ua[] = "Host:btcdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=1";
$lesu = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM2

$url = "http://btcdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:btcdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=2";
$les = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM3

$url = "http://btcdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:btcdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=3";
$le = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM4

$url = "http://btcdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:btcdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=4";
$l = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

echo $P2."~~~~~~~~~~~~~~~~~~~~~~~~~~\033[0;35m[ETH]\033[1;37m~~~~~~~~~~~~~~~~~~~~~~~~\n";

// CLAIM0

$url = "http://ethdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:ethdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=0";
$lesu0 = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM1

$url = "http://ethdrain.playpoolstudios.com/validatetimer.php";
$ua = array();
$ua[] = "Host:ethdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=1";
$lesu = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM2

$url = "http://ethdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:ethdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=2";
$les = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM3

$url = "http://ethdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:ethdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=3";
$le = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM4

$url = "http://ethdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:ethdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=4";
$l = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

echo $P2."~~~~~~~~~~~~~~~~~~~~~~~~~~\033[0;36m[LTC]\033[1;37m~~~~~~~~~~~~~~~~~~~~~~~~\n";

// CLAIM0

$url = "http://ltcdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:ltcdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=0";
$lesu0 = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM1

$url = "http://ltcdrain.playpoolstudios.com/validatetimer.php";
$ua = array();
$ua[] = "Host:ltcdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=1";
$lesu = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM2

$url = "http://ltcdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:ltcdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=2";
$les = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM3

$url = "http://ltcdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:ltcdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=3";
$le = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM4

$url = "http://ltcdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:ltcdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=4";
$l = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

echo $P2."~~~~~~~~~~~~~~~~~~~~~~~~~~\033[0;32m[BCH]\033[1;37m~~~~~~~~~~~~~~~~~~~~~~~~\n";

// CLAIM0

$url = "http://bchdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:bchdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=0";
$lesu0 = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM1

$url = "http://bchdrain.playpoolstudios.com/validatetimer.php";
$ua = array();
$ua[] = "Host:bchdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=1";
$lesu = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM2

$url = "http://bchdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:bchdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=2";
$les = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM3

$url = "http://bchdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:bchdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=3";
$le = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM4

$url = "http://bchdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:bchdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=4";
$l = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

echo $P2."~~~~~~~~~~~~~~~~~~~~~~~~~~\033[0;34m[XRP]\033[1;37m~~~~~~~~~~~~~~~~~~~~~~~~\n";
	
// CLAIM0

$url = "http://xrpdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:xrpdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=0";
$lesu0 = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM1

$url = "http://xrpdrain.playpoolstudios.com/validatetimer.php";
$ua = array();
$ua[] = "Host:xrpdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=1";
$lesu = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM2

$url = "http://xrpdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:xrpdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=2";
$les = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM3

$url = "http://xrpdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:xrpdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=3";
$le = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

// CLAIM4

$url = "http://xrpdrain.playpoolstudios.com/validatetimer.php";
$ua = array();                                                                                       $ua[] = "Host:xrpdrain.playpoolstudios.com";
$ua[] = "User-Agent:UnityPlayer/2019.4.18f1 (UnityWebRequest/1.0, libcurl/7.52.0-DEV)";
$ua[] = "Content-Type:application/x-www-form-urlencoded";
$data = "username=".$email."&btnId=4";
$l = post($url,$ua,$data);
echo "\033[1;31m▶ \033[1;37mSuccessful Claiming Mission \n";
sleep(1);

for ($x=600;$x>0;$x--){
echo "\r                                                        \r";
echo $P2."Next claim ".$P.$x.$M2." Second... ";
sleep(1);
}
echo "\r                                                        \r";
}")); ?>